title: Matplotlib
category: page
slug: matplotlib
sortorder: 0321
toc: False
sidebartitle: Matplotlib
meta: Matplotlib is a data visualization plotting library that builds visuals in Python for output in Jupyter Notebooks and web apps.


Matplotlib is a data visualization plotting library where a developer can 
code visuals in Python and output them as part of 
[Jupyter Notebooks](/jupyter-notebook.html), 
[web applications](/web-development.html) and graphical user interface (GUI)
toolkits.

<img src="/img/logos/matplotlib.png" width="100%" alt="Matplotlib logo." class="shot">


### Matplotlib resources
* [Effectively using Matplotlib](http://pbpython.com/effective-matplotlib.html)
  is an awesome getting started tutorial that breaks through the confusing
  beginner steps so you can quick start using the plotting library.

* [Matplotlib Cheat Sheet: Plotting in Python](https://www.datacamp.com/community/blog/python-matplotlib-cheat-sheet)
  contains some handy snippets of code to perform common plotting operations
  in Matplotlib.

* [5 Quick and Easy Data Visualizations in Python](https://towardsdatascience.com/5-quick-and-easy-data-visualizations-in-python-with-code-a2284bae952f)
  shows several code examples with explanations for performing exploratory
  data analysis using Matplotlib.

* [Introduction to Matplotlib — Data Visualization in Python](https://heartbeat.fritz.ai/introduction-to-matplotlib-data-visualization-in-python-d9143287ae39)
  explains how to install and start using Matplotlib. The post has a ton
  of detail on customizing your plots and graphs after creating the
  initial visuals.

* [Visualize World Trends using Seaborn in Python](https://towardsdatascience.com/visualize-world-trends-using-seaborn-in-python-2e563e7d35da)
  shows world life expectancy in plots generated by Matplotlib and Seaborn.

* [Pandas & Seaborn - A guide to handle & visualize data in Python](https://tryolabs.com/blog/2017/03/16/pandas-seaborn-a-guide-to-handle-visualize-data-elegantly/)
  builds a visualization by starting with [pandas](/pandas.html) for data
  wrangling then outputs charts with Matplotlib and Seaborn.

* [Matplotlib Tips and Demos](https://nbviewer.jupyter.org/urls/gist.githubusercontent.com/Jwink3101/e6b57eba3beca4b05ec146d9e38fc839/raw/f486ca3dcad44c33fc4e7ddedc1f83b82c02b492/Matplotlib_Cheatsheet)
  is a long [Jupyter Notebook](/jupyter-notebook.html) with a ton of example
  code that shows how to use Matplotlib in many ways.

* [Animation with Matplotlib](https://towardsdatascience.com/animations-with-matplotlib-d96375c5442c)
  explains the `animation` base class and the main interfaces for
  creating animations in your visualizations.

* [Matplotlib: Creating Plots](https://www.youtube.com/playlist?list=PL-osiE80TeTvipOqomVEeZ1HRrcEvtZB_)
  is a video tutorial series where each 15-ish minute episode covers
  one important topic such as shading areas on line plots, drawing
  pie charts or plotting a stream of updating data.
